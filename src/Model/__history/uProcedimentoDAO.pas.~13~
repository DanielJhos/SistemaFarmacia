unit uProcedimentoDAO;

interface

uses
  FireDAC.Comp.Client,
  uProcedimento;

type
  TFarmaceuticoDAO = class
  private
    FQuery: TFDQuery;
  public
    procedure Inserir(const AProcedimento: TProcedimento);
    procedure Deletar(const AProcedimento: TProcedimento);
    procedure UltimoRegistro(const AProcedimento: TProcedimento);
    function ProximoSequencial: String;

    constructor Create;
    destructor Destroy; override;
  end;


implementation

uses
  System.SysUtils,
  uDataModule,
  LibUtil;

{ TFarmaceuticoDAO }

constructor TFarmaceuticoDAO.Create;
begin
  FQuery := TFDQuery.Create(nil);
  FQuery.Connection := dmConexao.FDConnection;
end;

procedure TFarmaceuticoDAO.Deletar(const AProcedimento: TProcedimento);
begin
  FQuery.SQL.Clear;
  FQuery.SQL.Add('DELETE FROM procedimento');
  FQuery.SQL.Add('WHERE tipo = ?');
  FQuery.Params[0].AsInteger := Ord(AProcedimento.Tipo);
  FQuery.ExecSQL;
end;

destructor TFarmaceuticoDAO.Destroy;
begin
  FreeAndNil(FQuery);

  inherited;
end;

procedure TFarmaceuticoDAO.Inserir(const AProcedimento: TProcedimento);
begin
  FQuery.SQL.Clear;
  FQuery.SQL.Add('INSERT INTO procedimento ( tipo, descricao, valor_unitario )');
  FQuery.SQL.Add('VALUES ( ?, ?, ?) AS novo');
  FQuery.SQL.Add('ON DUPLICATE KEY UPDATE');
  FQuery.SQL.Add('descricao = novo.descricao,');
  FQuery.SQL.Add('valor_unitario = novo.valor_unitario');
  FQuery.Params[0].AsInteger := Ord(AProcedimento.Tipo);
  FQuery.Params[1].AsString := AProcedimento.Descricao;
  FQuery.Params[2].AsFloat := AProcedimento.ValorUnitario;
  FQuery.ExecSQL;
end;

function TFarmaceuticoDAO.ProximoSequencial: String;
begin

end;

procedure TFarmaceuticoDAO.UltimoRegistro(const AProcedimento: TProcedimento);
begin

end;

end.
